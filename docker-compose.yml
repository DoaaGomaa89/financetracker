services:
  # Database (use if your backend expects Postgres; if it uses H2, it will ignore this)
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: financetracker
      POSTGRES_USER: finance
      POSTGRES_PASSWORD: finance
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U finance -d financetracker"]
      interval: 5s
      timeout: 3s
      retries: 30
    volumes:
      - pgdata:/var/lib/postgresql/data

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      # adjust if your app uses different keys or profiles
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/financetracker
      SPRING_DATASOURCE_USERNAME: finance
      SPRING_DATASOURCE_PASSWORD: finance
      # Example Hibernate setting (remove if you manage schema another way)
      # SPRING_JPA_HIBERNATE_DDL_AUTO: update
    expose:
      - "8080"        # reachable from frontend via service name "backend"

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    depends_on:
      - backend
    ports:
      - "8080:80"     # open http://localhost:8080

volumes:
  pgdata:
